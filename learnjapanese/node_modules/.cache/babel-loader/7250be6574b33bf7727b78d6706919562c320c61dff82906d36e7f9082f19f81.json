{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aravind\\\\OneDrive\\\\Desktop\\\\react\\\\learnjapanese\\\\src\\\\Displayframe.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Display = props => {\n  return props.num;\n};\n_c = Display;\nconst Showclick = () => {\n  let ran = Math.floor(Math.random() * 15);\n  const words = [\"あ\", \"い\", \"う\", \"え\", \"お\", \"か\", \"き\", \"く\", \"け\", \"こ\", \"さ\", \"し\", \"す\", \"せ\", \"そ\"];\n  return /*#__PURE__*/_jsxDEV(Display, {\n    num: words[ran]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Showclick;\nconst Displayframe = () => {\n  const words = [\"あ\", \"い\", \"う\", \"え\", \"お\", \"か\", \"き\", \"く\", \"け\", \"こ\", \"さ\", \"し\", \"す\", \"せ\", \"そ\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Showclick,\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", words[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_c3 = Displayframe;\nexport default Displayframe;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Display\");\n$RefreshReg$(_c2, \"Showclick\");\n$RefreshReg$(_c3, \"Displayframe\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Display","props","num","_c","Showclick","ran","Math","floor","random","words","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Displayframe","children","onClick","_c3","$RefreshReg$"],"sources":["C:/Users/Aravind/OneDrive/Desktop/react/learnjapanese/src/Displayframe.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Display= (props)=>{\r\n    \r\n      return(props.num)    \r\n        \r\n       \r\n     \r\n    \r\n}\r\n   \r\n  const Showclick =()=>{ \r\n    let ran = Math.floor((Math.random() * 15) );\r\n    const words =[\t\r\n      \"あ\",\"い\",\"う\",\"え\",\"お\",\r\n      \"か\",\"き\",\"く\",\"け\",\"こ\" ,\r\n      \"さ\",\"し\",\"す\",\"せ\",\"そ\"];\r\n\r\n   return( <Display num={words[ran]}/>)\r\n\r\n}\r\n\r\n\r\n\r\n     const  Displayframe = ()=>{\r\n          \r\n    const words =[\t\r\n       \"あ\",\"い\",\"う\",\"え\",\"お\",\r\n       \"か\",\"き\",\"く\",\"け\",\"こ\" ,\r\n       \"さ\",\"し\",\"す\",\"せ\",\"そ\"];\r\n     \r\n       \r\n     return(\r\n        <>\r\n        <button onClick={Showclick }>\r\n      Click me!\r\n    </button>\r\n  <p> {words[0]}</p>\r\n  </>\r\n  )\r\n}\r\nexport default Displayframe;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,OAAO,GAAGC,KAAK,IAAG;EAElB,OAAOA,KAAK,CAACC,GAAG;AAKtB,CAAC;AAAAC,EAAA,GAPKH,OAAO;AASX,MAAMI,SAAS,GAAEA,CAAA,KAAI;EACnB,IAAIC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAI,CAAC;EAC3C,MAAMC,KAAK,GAAE,CACX,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EACnB,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EACnB,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;EAEvB,oBAAQZ,OAAA,CAACG,OAAO;IAACE,GAAG,EAAEO,KAAK,CAACJ,GAAG;EAAE;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEtC,CAAC;AAAAC,GAAA,GATOV,SAAS;AAaZ,MAAOW,YAAY,GAAGA,CAAA,KAAI;EAE3B,MAAMN,KAAK,GAAE,CACV,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EACnB,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EACnB,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;EAGtB,oBACGZ,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACAnB,OAAA;MAAQoB,OAAO,EAAEb,SAAW;MAAAY,QAAA,EAAC;IAEjC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACXhB,OAAA;MAAAmB,QAAA,GAAG,GAAC,EAACP,KAAK,CAAC,CAAC,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAChB,CAAC;AAEL,CAAC;AAAAK,GAAA,GAhBWH,YAAY;AAiBxB,eAAeA,YAAY;AAAC,IAAAZ,EAAA,EAAAW,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}